use rand::prelude::SliceRandom;
use rand::thread_rng;
use uttt_rs::*;

fn main() {
    for _i in 0..100 {
        let mut board = Board::new();
        let mut moves = board.generate_moves();
        let mut winner = Winner::InProgress;
    
        let mut rng = thread_rng();
    
        while !moves.is_empty() && winner == Winner::InProgress {
            let m = *moves.choose(&mut rng).expect("moves is not empty");
            // SAFETY: m is a valid Move because it was generated by board.generate_moves()
            unsafe {
                board = board.advance_state(m);
            }
            moves = board.generate_moves();
            winner = board.winner();
            // println!("{}", board);
        }
    
        println!("Winner: {:?}", board.winner());
    }
}
